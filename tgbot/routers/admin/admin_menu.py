# - *- coding: utf- 8 - *-

from aiogram import Router, Bot, F
from aiogram.filters import StateFilter
from aiogram.types import Message, CallbackQuery

from tgbot.database.db_document import Documentx
from tgbot.database.db_users import UserModel
from tgbot.keyboards.inline_admin import (document_cancel_add_finl, document_cancel_edit_finl,
                                          delete_document_confirm_finl)
from tgbot.keyboards.inline_main import document_edit_finl
from tgbot.keyboards.inline_page import document_open_finl
from tgbot.utils.misc.bot_models import FSM, ARS
from tgbot.utils.misc_functions import convert_ask

router = Router(name=__name__)


############################## –ò–ó–ú–ï–ù–ï–ù–ò–ï –î–û–ö–£–ú–ï–ù–¢–ê #############################
# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
@router.callback_query(F.data.startswith("edit_text_document"))
async def admin_document_edit(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    document_id = int(call.data.split(":")[1])

    await state.set_state("here_edit_text_document")
    await state.update_data(here_document_id=document_id)

    await call.message.edit_text(
        "<b>‚úèÔ∏è–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞</b>\n"
        "‚ùï –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 4000 —Å–∏–º–≤–æ–ª–æ–≤",
        reply_markup=document_cancel_edit_finl(document_id)
    )


# –ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
@router.message(StateFilter("here_edit_text_document"))
async def admin_document_edit_get(message: Message, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    document_id = int((await state.get_data())['here_document_id'])

    if len(message.text) > 4000:
        return await message.answer(
            "<b>‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤\n</b>"
            "‚ùï –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 4000 —Å–∏–º–≤–æ–ª–æ–≤",
            reply_markup=document_cancel_edit_finl(document_id)
        )

    document_file = None

    if message.document:
        document_file = message.document.file_id
    elif message.photo:
        document_file = message.photo[-1].file_id
    elif message.video:
        document_file = message.video.file_id
    else:
        document_file = message.text

    await state.clear()

    Documentx.update(
        document_id=document_id,
        document_info=document_file
    )

    get_document = Documentx.get(document_id=document_id)

    await message.answer(
        get_document.document_info,
        reply_markup=document_edit_finl(document_id, User.user_id, 0)
    )


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏
@router.callback_query(F.data.startswith("edit_name_document:"))
async def admin_edit_name_document(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    document_id = int(call.data.split(":")[1])

    await state.set_state("here_edit_name_document")
    await state.update_data(here_document_id=document_id)

    await call.message.edit_text(
        "<b>‚úèÔ∏è–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞</b>\n"
        "‚ùï –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤",
        reply_markup=document_cancel_edit_finl(document_id)
    )


# –ü—Ä–∏–Ω—è—Ç–∏–µ –Ω–æ–≤–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏
@router.message(StateFilter("here_edit_name_document"))
async def admin_document_edit_name_get(message: Message, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    document_id = int((await state.get_data())['here_document_id'])

    if len(message.text) > 50:
        return message.answer(
            "<b>‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤</b>\n"
            "‚ùï –î–ª–∏–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤",
            reply_markup=document_cancel_edit_finl(document_id)
        )

    Documentx.update(
        document_id=document_id,
        document_name=message.text
    )

    get_document = Documentx.get(document_id=document_id)

    await message.answer(
        get_document.document_info,
        reply_markup=document_edit_finl(document_id, User.user_id, 0)
    )


############################## –°–û–ó–î–ê–ù–ò–ï –î–û–ö–£–ú–ï–ù–¢–ê ##############################
# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
@router.callback_query(F.data == "document_add")
async def admin_document_name_add(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    await state.set_state("here_document_name_create")

    await call.message.edit_text(
        "<b>‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞\n</b>"
        "‚ùï –î–ª–∏–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤",
        reply_markup=document_cancel_add_finl()
    )


# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ
@router.message(StateFilter("here_document_name_create"))
async def admin_document_info_add(message: Message, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    if len(message.text) > 50:
        return message.answer(
            "<b>‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤</b>\n"
            "‚ùï –î–ª–∏–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 50 —Å–∏–º–≤–æ–ª–æ–≤",
            reply_markup=document_cancel_add_finl()
        )

    await state.update_data(here_document_name=message.text)
    await state.set_state("here_document_info_create")

    await message.answer(
        "<b>‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞\n</b>"
        "‚ùï –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 4000 —Å–∏–º–≤–æ–ª–æ–≤",
        reply_markup=document_cancel_add_finl()
    )


# –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
@router.message(StateFilter("here_document_info_create"))
async def admin_document_info_add(message: Message, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    if len(message.text) > 4000:
        return message.answer(
            "<b>‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤\n</b>"
            "‚ùï –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 4000 —Å–∏–º–≤–æ–ª–æ–≤",
            reply_markup=document_cancel_add_finl()
        )

    get_document_name = (await state.get_data())['here_document_name']
    get_document_info = message.text

    await state.clear()

    Documentx.add(
        document_name=get_document_name,
        document_info=get_document_info,
    )

    await message.answer(
        "<b>üìî –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω—ë–º</b>",
        reply_markup=document_open_finl(message.from_user.id, 0)
    )


# –û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
@router.callback_query(F.data == "document_cancel_add")
async def admin_document_add(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    await state.clear()

    await call.message.edit_text(
        "<b>üìî –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω—ë–º</b>",
        reply_markup=document_open_finl(call.from_user.id, 0)
    )


############################## –£–î–ê–õ–ï–ù–ò–ï –î–û–ö–£–ú–ï–ù–¢–ê ##############################
# –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
@router.callback_query(F.data.startswith("delete_document"))
async def admin_document_delete(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    document_id = int(call.data.split(":")[1])

    await call.message.edit_text(
        "‚ùóÔ∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç?",
        reply_markup=delete_document_confirm_finl(document_id)
    )


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
@router.callback_query(F.data.startswith("delete_confirm"))
async def admin_document_delete(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    document_id = int(call.data.split(":")[1])

    Documentx.delete(document_id=document_id)

    await call.answer("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω")
    await call.message.edit_text(
        "<b>üìî –í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω—ë–º</b>",
        reply_markup=document_open_finl(call.from_user.id, 0)
    )


################################## –ü–û–î–î–ï–†–ñ–ö–ê ###################################
# –û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
@router.callback_query(F.data.startswith("support_admin_answer"))
async def admin_support_cancel(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    user_id = call.data.split(":")[1]  # –ê–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–¥–∞–≤—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å

    await state.set_state("here_support_ask")
    await state.update_data(here_user_id=user_id)

    await bot.delete_message(
        chat_id=User.user_id,
        message_id=call.message.message_id
    )

    await call.message.answer(
        "<b>üìù –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å</b>\n"
        "‚ùï –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 2000 —Å–∏–º–≤–æ–ª–æ–≤",
    )


# –ü—Ä–∏–Ω—è—Ç–∏–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
@router.message(StateFilter("here_support_ask"))
async def admin_support_ask(message: Message, bot: Bot, state: FSM, arSession: ARS, User: UserModel):
    if len(message.text) > 2000:
        return await message.answer(
            "<b>‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤\n</b>"
            "‚ùï –û—Ç–≤–µ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 2000 —Å–∏–º–≤–æ–ª–æ–≤"
        )

    get_user_id = (await state.get_data())['here_user_id']

    await state.clear()

    await bot.delete_message(
        chat_id=User.user_id,
        message_id=message.message_id - 1
    )

    await bot.send_message(
        chat_id=get_user_id,
        text=convert_ask(message.text)
    )

    await message.answer("‚úÖ –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
